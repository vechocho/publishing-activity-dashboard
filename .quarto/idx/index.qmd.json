{"title":"Actividad de Publicación de Biodiversidad de Ecuador","markdown":{"yaml":{"title":"Actividad de Publicación de Biodiversidad de Ecuador","format":{"dashboard":{"scrolling":true}},"execute":{"echo":false}},"headingText":"--- BLOQUE DE CONFIGURACIÓN ---","containsRefs":false,"markdown":"\n\n```{r setup, include = FALSE}\n# --- SETUP CHUNK ---\n\n# Carga de todas las librerías de R necesarias.\n# Load all necessary R libraries.\n# 'include = FALSE' significa que este bloque no se mostrará en la web.\n# 'include = FALSE' means this chunk will not be shown on the website.\n\nlibrary(tidyverse)  # Para manipulación de datos (dplyr, purrr, etc.) / # For data manipulation (dplyr, purrr, etc.)\nlibrary(plotly)     # Para gráficos interactivos / # For interactive charts\nlibrary(here)       # Para rutas de archivos relativas / # For relative file paths\nlibrary(viridis)    # Para paletas de colores / # For color palettes\nlibrary(httr)       # Para hacer llamadas a la API (GET) / # For making API calls (GET)\nlibrary(jsonlite)   # Para procesar datos JSON de la API / # For processing JSON data from the API\nlibrary(rgbif)      # Para interactuar con la API de GBIF (¡añadido!) / # For interacting with the GBIF API (added!)\nlibrary(lubridate)  # Para manejar fechas fácilmente / # For easy date handling\n\n# Carga la función de ayuda 'get_created_modified' desde el archivo R/helpers.R\n# Load the helper function 'get_created_modified' from the R/helpers.R file\nsource(here(\"R\", \"helpers.R\"))\n\n# --- CARGA DE DATOS DE DATASETS ---\n# --- DATASET DATA LOADING ---\n\n# 1. Obtener todas las 'datasetKey' (IDs de datasets) que tienen registros en Ecuador.\n# 1. Get all 'datasetKey' (dataset IDs) that have records in Ecuador.\n# Usamos occ_search() para buscar en GBIF.\n# We use occ_search() to query GBIF.\necuador_dataset_keys <- occ_search(\n  country = \"EC\",      # Código ISO de 2 letras para Ecuador / # 2-letter ISO code for Ecuador\n  limit = 0,           # No queremos los registros, solo la lista de datasets / # We don't want records, just the dataset list\n  facet = \"datasetKey\",# Agrupar los resultados por dataset / # Group results by dataset\n  facetLimit = 10000   # Límite máximo de datasets a recuperar / # Maximum limit of datasets to retrieve\n)$facets$datasetKey$name\n\n# 2. Iterar sobre cada 'datasetKey' para obtener sus metadatos.\n# 2. Iterate over each 'datasetKey' to get its metadata.\n# 'map_dfr' crea una única tabla (data frame) combinando los resultados de cada iteración.\n# 'map_dfr' creates a single data frame by row-binding the results of each iteration.\ndatasets <- ecuador_dataset_keys %>%\n  map_dfr(~{\n    \n    # '.x' es el 'datasetKey' actual en el bucle\n    # '.x' is the current 'datasetKey' in the loop\n    current_key <- .x \n    \n    # Imprime en el log de la Action (para debugging)\n    # Print to the Action log (for debugging)\n    print(paste(\"Procesando dataset / Processing dataset:\", current_key)) \n    \n    # A. Obtener metadatos base (tipo, licencia)\n    # A. Get base metadata (type, license)\n    meta <- rgbif::dataset_get(current_key)\n    \n    # B. Obtener fechas de creación/modificación (usando la función de R/helpers.R)\n    # B. Get created/modified dates (using the function from R/helpers.R)\n    date_info <- get_created_modified(current_key) \n    \n    # C. Construir una fila (tibble) con toda la información necesaria.\n    # C. Build a single row (tibble) with all necessary information.\n    # Esto es robusto y asegura que todas las columnas existan.\n    # This is robust and ensures all columns exist.\n    tibble(\n      dataset_key = meta$data$key,\n      type = meta$data$type,\n      license = meta$data$license,\n      # Usar %||% 0 para asignar 0 si 'occurrenceCount' es NULL (evita errores)\n      # Use %||% 0 to assign 0 if 'occurrenceCount' is NULL (prevents errors)\n      occurrence_records_count = meta$data$occurrenceCount %||% 0,\n      created = date_info$created,\n      modified = date_info$modified\n    )\n  }) %>%\n  # 3. Procesar las fechas\n  # 3. Process the dates\n  # Esto ahora funciona porque 'created' y 'modified' fueron añadidas en el paso anterior.\n  # This now works because 'created' and 'modified' were added in the previous step.\n  mutate(\n    created_date = as_date(created),\n    created_year = year(created_date),\n    modified_date = as_date(modified),\n    modified_year = year(modified_date)\n  )\n\n# --- PROCESAMIENTO DE DATOS ---\n# --- DATA PROCESSING ---\n\n# Contar datasets por año de creación y tipo\n# Count datasets by creation year and type\ncreated_datasets_counts <- datasets %>%\n  group_by(created_year, type) %>%\n  summarise(count = n(), .groups = \"drop\")\n\n# Calcular el total acumulativo de datasets por año\n# Calculate the cumulative total of datasets per year\ncumulative_created_datasets <- created_datasets_counts %>%\n  group_by(created_year) %>%\n  summarise(yearly_total = sum(count)) %>%\n  arrange(created_year) %>%\n  mutate(cumulative_total = cumsum(yearly_total)) # Suma acumulativa / # Cumulative sum\n\n# Contar datasets por año de modificación y tipo\n# Count datasets by modification year and type\nmodified_datasets_counts <- datasets %>%\n  group_by(modified_year, type) %>%\n  summarise(count = n(), .groups = \"drop\")\n\n# Sumar el número de registros (occurrences) por año de creación del dataset\n# Sum the number of records (occurrences) by the dataset's creation year\nrecords_per_year <- datasets %>%\n  group_by(created_year) %>%\n  summarise(total_occurrence_records = sum(occurrence_records_count, na.rm = TRUE)) %>%\n  arrange(created_year) %>%\n  mutate(cumulative_occ = cumsum(total_occurrence_records)) # Suma acumulativa / # Cumulative sum\n\n# Contar el número de datasets por tipo de licencia\n# Count the number of datasets by license type\nlicense_counts <- datasets %>%\n  count(license, name = \"count\")\n\n# --- CARGA DE DATOS DE CITACIONES ---\n# --- CITATION DATA LOADING ---\n\n# URL de la API de GBIF para buscar literatura científica\n# GBIF API URL to search for scientific literature\n# Actualizada para buscar artículos que citen datos de GBIF y mencionen \"Ecuador\"\n# Updated to search for articles citing GBIF data and mentioning \"Ecuador\"\ncitation_url <- \"[https://api.gbif.org/v1/literature/search?q=Ecuador&relevance=GBIF_USED&facet=year](https://api.gbif.org/v1/literature/search?q=Ecuador&relevance=GBIF_USED&facet=year)\"\n\n# Hacer la llamada a la API\n# Make the API call\nresponse <- GET(citation_url)\nstop_for_status(response) # Detener si la API da un error / # Stop if the API returns an error\n\n# Procesar la respuesta JSON\n# Process the JSON response\ncitation_json_data <- content(response, \"text\", encoding = \"UTF-8\") %>% fromJSON(flatten = TRUE)\n\n# Extraer los conteos de citaciones por año\n# Extract citation counts per year\ncitation_per_year <- citation_json_data$facets$counts[[1]] %>%\n  as_tibble() %>%\n  rename(year = name) %>%\n  mutate(\n    year = as.integer(year),\n    count = as.integer(count)\n  ) %>%\n  arrange(year) %>%  # Asegurar orden ascendente / # Ensure ascending order\n  mutate(cumulative_count = cumsum(count)) # Suma acumulativa / # Cumulative sum\n\n  #| title: Número de Registros de Ocurrencia Publicados por Año\n#| title: Number of Occurrence Records Published per Year\n# Este gráfico muestra cuántos registros (total_occurrence_records)\n# se publicaron cada año, basado en el año de creación del dataset.\n# This chart shows how many records (total_occurrence_records)\n# were published each year, based on the dataset's creation year.\n\ncumulative_color <- \"#F8760D\" # Color para la línea acumulativa / # Color for the cumulative line\n\nfig <- plot_ly() %>%\n  \n  # Gráfico de barras: Registros por año\n  # Bar chart: Records per year\n  add_bars(\n    data = records_per_year,\n    x = ~created_year,\n    y = ~total_occurrence_records,\n    name = \"Registros por año / Records per year\",\n    marker = list(color = \"#21908CFF\")\n  ) %>%\n  \n  # Línea: Total acumulativo\n  # Line: Cumulative Total\n  add_lines(\n    data = records_per_year,\n    x = ~created_year,\n    y = ~cumulative_occ,\n    name = \"Total Acumulativo / Cumulative Total\",\n    yaxis = \"y2\", # Usar el eje Y secundario (derecha) / # Use secondary Y-axis (right)\n    line = list(color = cumulative_color, width = 2)\n  ) %>%\n  \n  # Configuración de los ejes\n  # Layout and axes configuration\n  layout(\n    xaxis = list(title = \"Año / Year\"),\n    yaxis = list(\n      title = \"Registros por Año (log) / Records per Year (log)\",\n      type = \"log\", # Escala logarítmica / # Logarithmic scale\n      rangemode = \"nonnegative\"\n    ),\n    yaxis2 = list(\n      overlaying = \"y\",\n      side = \"right\",\n      type = \"log\",\n      title = list(text = \"Total Acumulativo (log) / Cumulative Total (log)\"),\n      rangemode = \"nonnegative\"\n    ),\n    margin = list(r = 80),\n    legend = list(x = 0.05, y = 0.95)\n  )\n\nfig\n\n#| title: Número de Datasets Publicados por Año\n#| title: Number of Datasets Published per Year\n# Gráfico de barras apiladas que muestra cuántos datasets\n# de cada tipo (type) se publicaron por año.\n# Stacked bar chart showing how many datasets\n# of each type were published per year.\n\n# Paleta de colores de Viridis\n# Viridis color palette\nn_colors <- length(unique(created_datasets_counts$type))\ncb_palette <- viridis(n_colors) \n\nfig <- plot_ly() %>%\n  \n  # Barras apiladas (stack)\n  # Stacked bars\n  add_bars(\n    data = created_datasets_counts,\n    x = ~created_year,\n    y = ~count,\n    color = ~type,\n    colors = cb_palette,\n    name = ~type\n  ) %>%\n  \n  # Línea acumulativa\n  # Cumulative line\n  add_lines(\n    data = cumulative_created_datasets,\n    x = ~created_year,\n    y = ~cumulative_total,\n    name = \"Total Acumulativo / Cumulative Total\",\n    yaxis = \"y2\", # Eje Y secundario / # Secondary Y-axis\n    line = list(color = \"#F8760DFF\", width = 2)\n  ) %>%\n  \n  layout(\n    barmode = \"stack\", # Apilar las barras / # Stack the bars\n    xaxis = list(title = \"Año / Year\"),\n    yaxis = list(title = \"Número de Datasets / Number of Datasets\"),\n    yaxis2 = list(\n      overlaying = \"y\",\n      side = \"right\",\n      title = \"Total Acumulativo / Cumulative Total\"\n    ),\n    margin = list(r = 80),\n    legend = list(x = 0.02, y = 1)\n  )\n\nfig\n\n#| title: Citaciones de Datasets Publicados (GBIF) por Año\n#| title: Citations of Published Datasets (GBIF) per Year\n# Gráfico de barras que muestra cuántos artículos científicos\n# han citado datasets de GBIF relacionados con Ecuador.\n# Bar chart showing how many scientific articles\n# have cited GBIF datasets related to Ecuador.\n\ncumulative_color <- \"#F8760D\"\n\nfig <- plot_ly() %>%\n  \n  # Barras: Citaciones por año\n  # Bars: Citations per year\n  add_bars(\n    data = citation_per_year,\n    x = ~year,\n    y = ~count,\n    name = \"Citaciones por año / Citations per year\",\n    marker = list(color = \"#21908CFF\")\n  ) %>%\n  \n  # Línea: Total acumulativo\n  # Line: Cumulative total\n  add_lines(\n    data = citation_per_year,\n    x = ~year,\n    y = ~cumulative_count,\n    name = \"Total Acumulativo / Cumulative Total\",\n    yaxis = \"y2\",\n    line = list(color = cumulative_color, width = 2)\n  ) %>%\n  \n  layout(\n    xaxis = list(title = \"Año / Year\"),\n    yaxis = list(\n      title = \"Número de Citaciones / Number of Citations\",\n      rangemode = \"nonnegative\"\n    ),\n    yaxis2 = list(\n      overlaying = \"y\",\n      side = \"right\",\n      title = list(text = \"Total Acumulativo / Cumulative Total\"),\n      rangemode = \"nonnegative\"\n    ),\n    margin = list(r = 80),\n    legend = list(x = 0.05, y = 0.95)\n  )\n\nfig\n\n#| title: Distribución de Licencias de Datasets\n#| title: Distribution of Dataset Licenses\n# Gráfico de pastel (dona) que muestra el porcentaje\n# de cada tipo de licencia (CC-BY, CC0, etc.)\n# Pie (donut) chart showing the percentage\n# of each license type (CC-BY, CC0, etc.)\n\nn_colors <- length(unique(license_counts$license))\ncb_palette <- viridis(n_colors) \n\nplot_ly(\n  license_counts,\n  labels = ~license,\n  values = ~count,\n  type = \"pie\",\n  hole = 0.4, # Agujero en el medio para hacerlo tipo dona / # Hole in the middle to make it a donut chart\n  marker = list(colors = cb_palette)\n)\n\n#| title: Número de Datasets Actualizados por Año\n#| title: Number of Datasets Updated per Year\n# Gráfico de barras apiladas que muestra cuántos datasets\n# fueron modificados/actualizados cada año.\n# Stacked bar chart showing how many datasets\n# were modified/updated each year.\n\nn_colors <- length(unique(modified_datasets_counts$type))\ncb_palette <- viridis(n_colors) \n\nplot_ly(\n  modified_datasets_counts,\n  x = ~modified_year,\n  y = ~count,\n  color = ~type,\n  colors = cb_palette,\n  type = \"bar\"\n) %>%\n  layout(\n    barmode = \"stack\",\n    xaxis = list(title = \"Año / Year\"),\n    yaxis = list(title = \"Número de Datasets / Number of Datasets\"),\n    legend = list(x = 0.02, y = 1)\n  )","srcMarkdownNoYaml":"\n\n```{r setup, include = FALSE}\n# --- BLOQUE DE CONFIGURACIÓN ---\n# --- SETUP CHUNK ---\n\n# Carga de todas las librerías de R necesarias.\n# Load all necessary R libraries.\n# 'include = FALSE' significa que este bloque no se mostrará en la web.\n# 'include = FALSE' means this chunk will not be shown on the website.\n\nlibrary(tidyverse)  # Para manipulación de datos (dplyr, purrr, etc.) / # For data manipulation (dplyr, purrr, etc.)\nlibrary(plotly)     # Para gráficos interactivos / # For interactive charts\nlibrary(here)       # Para rutas de archivos relativas / # For relative file paths\nlibrary(viridis)    # Para paletas de colores / # For color palettes\nlibrary(httr)       # Para hacer llamadas a la API (GET) / # For making API calls (GET)\nlibrary(jsonlite)   # Para procesar datos JSON de la API / # For processing JSON data from the API\nlibrary(rgbif)      # Para interactuar con la API de GBIF (¡añadido!) / # For interacting with the GBIF API (added!)\nlibrary(lubridate)  # Para manejar fechas fácilmente / # For easy date handling\n\n# Carga la función de ayuda 'get_created_modified' desde el archivo R/helpers.R\n# Load the helper function 'get_created_modified' from the R/helpers.R file\nsource(here(\"R\", \"helpers.R\"))\n\n# --- CARGA DE DATOS DE DATASETS ---\n# --- DATASET DATA LOADING ---\n\n# 1. Obtener todas las 'datasetKey' (IDs de datasets) que tienen registros en Ecuador.\n# 1. Get all 'datasetKey' (dataset IDs) that have records in Ecuador.\n# Usamos occ_search() para buscar en GBIF.\n# We use occ_search() to query GBIF.\necuador_dataset_keys <- occ_search(\n  country = \"EC\",      # Código ISO de 2 letras para Ecuador / # 2-letter ISO code for Ecuador\n  limit = 0,           # No queremos los registros, solo la lista de datasets / # We don't want records, just the dataset list\n  facet = \"datasetKey\",# Agrupar los resultados por dataset / # Group results by dataset\n  facetLimit = 10000   # Límite máximo de datasets a recuperar / # Maximum limit of datasets to retrieve\n)$facets$datasetKey$name\n\n# 2. Iterar sobre cada 'datasetKey' para obtener sus metadatos.\n# 2. Iterate over each 'datasetKey' to get its metadata.\n# 'map_dfr' crea una única tabla (data frame) combinando los resultados de cada iteración.\n# 'map_dfr' creates a single data frame by row-binding the results of each iteration.\ndatasets <- ecuador_dataset_keys %>%\n  map_dfr(~{\n    \n    # '.x' es el 'datasetKey' actual en el bucle\n    # '.x' is the current 'datasetKey' in the loop\n    current_key <- .x \n    \n    # Imprime en el log de la Action (para debugging)\n    # Print to the Action log (for debugging)\n    print(paste(\"Procesando dataset / Processing dataset:\", current_key)) \n    \n    # A. Obtener metadatos base (tipo, licencia)\n    # A. Get base metadata (type, license)\n    meta <- rgbif::dataset_get(current_key)\n    \n    # B. Obtener fechas de creación/modificación (usando la función de R/helpers.R)\n    # B. Get created/modified dates (using the function from R/helpers.R)\n    date_info <- get_created_modified(current_key) \n    \n    # C. Construir una fila (tibble) con toda la información necesaria.\n    # C. Build a single row (tibble) with all necessary information.\n    # Esto es robusto y asegura que todas las columnas existan.\n    # This is robust and ensures all columns exist.\n    tibble(\n      dataset_key = meta$data$key,\n      type = meta$data$type,\n      license = meta$data$license,\n      # Usar %||% 0 para asignar 0 si 'occurrenceCount' es NULL (evita errores)\n      # Use %||% 0 to assign 0 if 'occurrenceCount' is NULL (prevents errors)\n      occurrence_records_count = meta$data$occurrenceCount %||% 0,\n      created = date_info$created,\n      modified = date_info$modified\n    )\n  }) %>%\n  # 3. Procesar las fechas\n  # 3. Process the dates\n  # Esto ahora funciona porque 'created' y 'modified' fueron añadidas en el paso anterior.\n  # This now works because 'created' and 'modified' were added in the previous step.\n  mutate(\n    created_date = as_date(created),\n    created_year = year(created_date),\n    modified_date = as_date(modified),\n    modified_year = year(modified_date)\n  )\n\n# --- PROCESAMIENTO DE DATOS ---\n# --- DATA PROCESSING ---\n\n# Contar datasets por año de creación y tipo\n# Count datasets by creation year and type\ncreated_datasets_counts <- datasets %>%\n  group_by(created_year, type) %>%\n  summarise(count = n(), .groups = \"drop\")\n\n# Calcular el total acumulativo de datasets por año\n# Calculate the cumulative total of datasets per year\ncumulative_created_datasets <- created_datasets_counts %>%\n  group_by(created_year) %>%\n  summarise(yearly_total = sum(count)) %>%\n  arrange(created_year) %>%\n  mutate(cumulative_total = cumsum(yearly_total)) # Suma acumulativa / # Cumulative sum\n\n# Contar datasets por año de modificación y tipo\n# Count datasets by modification year and type\nmodified_datasets_counts <- datasets %>%\n  group_by(modified_year, type) %>%\n  summarise(count = n(), .groups = \"drop\")\n\n# Sumar el número de registros (occurrences) por año de creación del dataset\n# Sum the number of records (occurrences) by the dataset's creation year\nrecords_per_year <- datasets %>%\n  group_by(created_year) %>%\n  summarise(total_occurrence_records = sum(occurrence_records_count, na.rm = TRUE)) %>%\n  arrange(created_year) %>%\n  mutate(cumulative_occ = cumsum(total_occurrence_records)) # Suma acumulativa / # Cumulative sum\n\n# Contar el número de datasets por tipo de licencia\n# Count the number of datasets by license type\nlicense_counts <- datasets %>%\n  count(license, name = \"count\")\n\n# --- CARGA DE DATOS DE CITACIONES ---\n# --- CITATION DATA LOADING ---\n\n# URL de la API de GBIF para buscar literatura científica\n# GBIF API URL to search for scientific literature\n# Actualizada para buscar artículos que citen datos de GBIF y mencionen \"Ecuador\"\n# Updated to search for articles citing GBIF data and mentioning \"Ecuador\"\ncitation_url <- \"[https://api.gbif.org/v1/literature/search?q=Ecuador&relevance=GBIF_USED&facet=year](https://api.gbif.org/v1/literature/search?q=Ecuador&relevance=GBIF_USED&facet=year)\"\n\n# Hacer la llamada a la API\n# Make the API call\nresponse <- GET(citation_url)\nstop_for_status(response) # Detener si la API da un error / # Stop if the API returns an error\n\n# Procesar la respuesta JSON\n# Process the JSON response\ncitation_json_data <- content(response, \"text\", encoding = \"UTF-8\") %>% fromJSON(flatten = TRUE)\n\n# Extraer los conteos de citaciones por año\n# Extract citation counts per year\ncitation_per_year <- citation_json_data$facets$counts[[1]] %>%\n  as_tibble() %>%\n  rename(year = name) %>%\n  mutate(\n    year = as.integer(year),\n    count = as.integer(count)\n  ) %>%\n  arrange(year) %>%  # Asegurar orden ascendente / # Ensure ascending order\n  mutate(cumulative_count = cumsum(count)) # Suma acumulativa / # Cumulative sum\n\n  #| title: Número de Registros de Ocurrencia Publicados por Año\n#| title: Number of Occurrence Records Published per Year\n# Este gráfico muestra cuántos registros (total_occurrence_records)\n# se publicaron cada año, basado en el año de creación del dataset.\n# This chart shows how many records (total_occurrence_records)\n# were published each year, based on the dataset's creation year.\n\ncumulative_color <- \"#F8760D\" # Color para la línea acumulativa / # Color for the cumulative line\n\nfig <- plot_ly() %>%\n  \n  # Gráfico de barras: Registros por año\n  # Bar chart: Records per year\n  add_bars(\n    data = records_per_year,\n    x = ~created_year,\n    y = ~total_occurrence_records,\n    name = \"Registros por año / Records per year\",\n    marker = list(color = \"#21908CFF\")\n  ) %>%\n  \n  # Línea: Total acumulativo\n  # Line: Cumulative Total\n  add_lines(\n    data = records_per_year,\n    x = ~created_year,\n    y = ~cumulative_occ,\n    name = \"Total Acumulativo / Cumulative Total\",\n    yaxis = \"y2\", # Usar el eje Y secundario (derecha) / # Use secondary Y-axis (right)\n    line = list(color = cumulative_color, width = 2)\n  ) %>%\n  \n  # Configuración de los ejes\n  # Layout and axes configuration\n  layout(\n    xaxis = list(title = \"Año / Year\"),\n    yaxis = list(\n      title = \"Registros por Año (log) / Records per Year (log)\",\n      type = \"log\", # Escala logarítmica / # Logarithmic scale\n      rangemode = \"nonnegative\"\n    ),\n    yaxis2 = list(\n      overlaying = \"y\",\n      side = \"right\",\n      type = \"log\",\n      title = list(text = \"Total Acumulativo (log) / Cumulative Total (log)\"),\n      rangemode = \"nonnegative\"\n    ),\n    margin = list(r = 80),\n    legend = list(x = 0.05, y = 0.95)\n  )\n\nfig\n\n#| title: Número de Datasets Publicados por Año\n#| title: Number of Datasets Published per Year\n# Gráfico de barras apiladas que muestra cuántos datasets\n# de cada tipo (type) se publicaron por año.\n# Stacked bar chart showing how many datasets\n# of each type were published per year.\n\n# Paleta de colores de Viridis\n# Viridis color palette\nn_colors <- length(unique(created_datasets_counts$type))\ncb_palette <- viridis(n_colors) \n\nfig <- plot_ly() %>%\n  \n  # Barras apiladas (stack)\n  # Stacked bars\n  add_bars(\n    data = created_datasets_counts,\n    x = ~created_year,\n    y = ~count,\n    color = ~type,\n    colors = cb_palette,\n    name = ~type\n  ) %>%\n  \n  # Línea acumulativa\n  # Cumulative line\n  add_lines(\n    data = cumulative_created_datasets,\n    x = ~created_year,\n    y = ~cumulative_total,\n    name = \"Total Acumulativo / Cumulative Total\",\n    yaxis = \"y2\", # Eje Y secundario / # Secondary Y-axis\n    line = list(color = \"#F8760DFF\", width = 2)\n  ) %>%\n  \n  layout(\n    barmode = \"stack\", # Apilar las barras / # Stack the bars\n    xaxis = list(title = \"Año / Year\"),\n    yaxis = list(title = \"Número de Datasets / Number of Datasets\"),\n    yaxis2 = list(\n      overlaying = \"y\",\n      side = \"right\",\n      title = \"Total Acumulativo / Cumulative Total\"\n    ),\n    margin = list(r = 80),\n    legend = list(x = 0.02, y = 1)\n  )\n\nfig\n\n#| title: Citaciones de Datasets Publicados (GBIF) por Año\n#| title: Citations of Published Datasets (GBIF) per Year\n# Gráfico de barras que muestra cuántos artículos científicos\n# han citado datasets de GBIF relacionados con Ecuador.\n# Bar chart showing how many scientific articles\n# have cited GBIF datasets related to Ecuador.\n\ncumulative_color <- \"#F8760D\"\n\nfig <- plot_ly() %>%\n  \n  # Barras: Citaciones por año\n  # Bars: Citations per year\n  add_bars(\n    data = citation_per_year,\n    x = ~year,\n    y = ~count,\n    name = \"Citaciones por año / Citations per year\",\n    marker = list(color = \"#21908CFF\")\n  ) %>%\n  \n  # Línea: Total acumulativo\n  # Line: Cumulative total\n  add_lines(\n    data = citation_per_year,\n    x = ~year,\n    y = ~cumulative_count,\n    name = \"Total Acumulativo / Cumulative Total\",\n    yaxis = \"y2\",\n    line = list(color = cumulative_color, width = 2)\n  ) %>%\n  \n  layout(\n    xaxis = list(title = \"Año / Year\"),\n    yaxis = list(\n      title = \"Número de Citaciones / Number of Citations\",\n      rangemode = \"nonnegative\"\n    ),\n    yaxis2 = list(\n      overlaying = \"y\",\n      side = \"right\",\n      title = list(text = \"Total Acumulativo / Cumulative Total\"),\n      rangemode = \"nonnegative\"\n    ),\n    margin = list(r = 80),\n    legend = list(x = 0.05, y = 0.95)\n  )\n\nfig\n\n#| title: Distribución de Licencias de Datasets\n#| title: Distribution of Dataset Licenses\n# Gráfico de pastel (dona) que muestra el porcentaje\n# de cada tipo de licencia (CC-BY, CC0, etc.)\n# Pie (donut) chart showing the percentage\n# of each license type (CC-BY, CC0, etc.)\n\nn_colors <- length(unique(license_counts$license))\ncb_palette <- viridis(n_colors) \n\nplot_ly(\n  license_counts,\n  labels = ~license,\n  values = ~count,\n  type = \"pie\",\n  hole = 0.4, # Agujero en el medio para hacerlo tipo dona / # Hole in the middle to make it a donut chart\n  marker = list(colors = cb_palette)\n)\n\n#| title: Número de Datasets Actualizados por Año\n#| title: Number of Datasets Updated per Year\n# Gráfico de barras apiladas que muestra cuántos datasets\n# fueron modificados/actualizados cada año.\n# Stacked bar chart showing how many datasets\n# were modified/updated each year.\n\nn_colors <- length(unique(modified_datasets_counts$type))\ncb_palette <- viridis(n_colors) \n\nplot_ly(\n  modified_datasets_counts,\n  x = ~modified_year,\n  y = ~count,\n  color = ~type,\n  colors = cb_palette,\n  type = \"bar\"\n) %>%\n  layout(\n    barmode = \"stack\",\n    xaxis = list(title = \"Año / Year\"),\n    yaxis = list(title = \"Número de Datasets / Number of Datasets\"),\n    legend = list(x = 0.02, y = 1)\n  )"},"formats":{"dashboard":{"identifier":{"display-name":"HTML","target-format":"dashboard","base-format":"dashboard"},"execute":{"fig-width":8,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":"all","plotly-connected":false,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.8.25","page-layout":"custom","editor":"visual","title":"Actividad de Publicación de Biodiversidad de Ecuador","scrolling":true},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}